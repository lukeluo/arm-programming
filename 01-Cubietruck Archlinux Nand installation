### Requirement
- Install to Nand, save a SD card;
- As a programing machine for Armv7 c/c++/assembly;
- Upgrade to newest Archlinuxarm stock kernel and newest release;
- As a network proxy server ( vpn, etc);

### Procedures

##### 1. Original Resource
  - Allwinner usb driver for FEL mode, burning image to Nand;
   [github link](https://github.com/linux-sunxi/allwinner-tools/tree/master/awusb)
  - Allwinner LiveSuit Linux x64 version. The Nand burning tool
    [LiveSuit](http://dl.cubieboard.org/software/tools/linux/LiveSuitV305_For_Linux64.zip)
  - Archinux Nand image for Cubietruck
    [Archlinux Nand](http://dl.cubieboard.org/software/a20-cubietruck/archlinux/ct-arch-v2/archlinux-nand.img.gz)
    
##### 2. Preparation
  - Allwinner usb driver
  It is just one c file and a Makefile.  The "#include <linux/signal.h>" should be changed to "#include <linux/sched/signal.h>".
  Just do a make, then you will get a awsusb.ko.   Do "sudo insmod ./awsusb.ko" and "lsmod" to make sure it is loaded. Since this
  is a kernel module, make sure you have your "linux-headers" package installed before compiling. 
  - LiveSuit
    It is a Qt application, and all the scripts are written for Redhat or Ubuntu, but not for Archlinux.  But that does not
    matter. Unzip the file, you will get a "LiveSuit.run" and "ReadMe.pdf". From the 60 line to the end of LiveSuit.run's contents 
    are actually a "tar.bz2", extract it into a new file like this:
    
    ```bash
    tail -n +60 LiveSuit.run > livesuit.tar.bz2
    tar xvf livesuit.tar.bz2
    [luke@nuc LiveSuit_For_Linux64]$ tar xvf livesuit.tar.bz2 
LiveSuit/
LiveSuit/LiveSuit.sh
LiveSuit/bin/
LiveSuit/bin/regdemo.lua
LiveSuit/bin/LiveProc.Plg
LiveSuit/bin/LiveSuit.lan
LiveSuit/bin/luadec.dll
LiveSuit/bin/imgdec_fun.lua
LiveSuit/bin/LiveSuit
LiveSuit/bin/libQtGui.so.4
LiveSuit/bin/regdecode.lua
LiveSuit/bin/ini_fun.lua
LiveSuit/bin/libQtCore.so.4
LiveSuit/bin/common_fun.lua
LiveSuit/bin/plgvector.dll
LiveSuit/bin/regbasefun.lua
LiveSuit/bin/LangPlg.dll
LiveSuit/bin/luaBase.dll
LiveSuit/bin/luaeFex.dll
awdev-0.5-1dkms.noarch.rpm
awdev-dkms_0.5_all.deb
   ```
    
    the "rpm"/"deb" are actually awusb driver.  We have compiled it manually so I don't bother to install "rpm-org" and "dpkg"
    (Aur) packages just to install this simple awusb driver.  
    
    All files under "LiveSuit" are the nand burner application (LiveSuit.sh). Before run this Qt burner, there are two caveats 
    need to be taken care of:
    - install "libpng12" since it is needed by LiveSuit
    - ensure you have write permission to Fel usb device under "/dev". More on this later.
   
  - nand image: Just gunzip it. 
  
  #### 3. Buring
  
  - monitoring tools
   Buring nand is quite low level operation. Lots of thing could go wrong.  So buckle up first.
   - usb monitoring
   ```bash
      [luke@nuc ~]$ sudo modprobe usbmon
[luke@nuc ~]$ lsmod | grep usbmon
usbmon                 32768  10
[luke@nuc ~]$ modinfo usbmon
filename:       /lib/modules/5.1.9-arch1-1-ARCH/kernel/drivers/usb/mon/usbmon.ko.xz
license:        GPL
srcversion:     218C76A27E28E45594D0078
depends:        
retpoline:      Y
intree:         Y
name:           usbmon
vermagic:       5.1.9-arch1-1-ARCH SMP preempt mod_unload 
sig_id:         PKCS#7
signer:         Build time autogenerated kernel key
sig_key:        2A:42:CC:C6:DA:E1:0B:6D:3F:7E:9F:D5:0F:99:FA:2C:87:7F:9D:FF

[luke@nuc ~]$ yay -Ss usbtop
aur/usbtop-git 0.2-1 (+2 0.00%) 
    top-like utility that shows an estimated instantaneous bandwidth on USB buses and devices
aur/usbtop 1.0-1 (+5 0.00%) (Installed)
    top-like utility that shows an estimated instantaneous bandwidth on USB buses and devices
[luke@nuc ~]$ yas -S usbtop
[luke@nuc ~]$ sudo pacman -S wireshark-cli

  - Serial Console (very important. Must have)
  I have a usb2ttl dongle and use "minicom" to connect to cubietruck. The serial connect parameter is "115200/8N1" without
  soft/hard flow control 
  
  - monitor dashboard 
    I use these commands for monitoring:
    "journalctl -f -k"/"watch -n 1 lsusb"/"udevadm monitor -p" 
    "usbtop"/minicom/"tshark -i usbmonx -Y usb.addr


    

  
